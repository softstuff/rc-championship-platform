/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rc.championship.platform.decoder.lap.publisher.options;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListModel;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;
import rc.championship.platform.decoder.lap.publisher.JaxRSLapPublisher;
import rc.championship.platform.decoder.lap.publisher.RccLapPublisher;

final class PublisherPanel extends javax.swing.JPanel {

    private final PublisherOptionsPanelController controller;

    private boolean originalEnabled;
    
    private DefaultListModel<String> listModel;
    
    PublisherPanel(PublisherOptionsPanelController controller) {
        this.controller = controller;
        this.listModel = new DefaultListModel();
        
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbRccPublicher = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        urlList = new javax.swing.JList<>();
        addButton = new javax.swing.JButton();
        editPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        editTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        testButton = new javax.swing.JButton();
        testResultLabel = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(cbRccPublicher, org.openide.util.NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.cbRccPublicher.text")); // NOI18N
        cbRccPublicher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRccPublicherActionPerformed(evt);
            }
        });

        urlList.setModel(listModel);
        urlList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        urlList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                urlListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(urlList);

        org.openide.awt.Mnemonics.setLocalizedText(addButton, org.openide.util.NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.addButton.text")); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(saveButton, org.openide.util.NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.saveButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(removeButton, org.openide.util.NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.removeButton.text")); // NOI18N
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(testButton, org.openide.util.NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.testButton.text")); // NOI18N

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addComponent(testButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(testResultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addComponent(editTextField)))
        );
        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(editTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(testButton)
                    .addComponent(removeButton)
                    .addComponent(testResultLabel))
                .addGap(0, 80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbRccPublicher)
                        .addGap(0, 398, Short.MAX_VALUE))
                    .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbRccPublicher)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbRccPublicherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRccPublicherActionPerformed
        if(originalEnabled != cbRccPublicher.isSelected()){
            controller.changed();
        }
    }//GEN-LAST:event_cbRccPublicherActionPerformed

    private void urlListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_urlListValueChanged
        controller.changed();
        if(urlList.isSelectionEmpty()){
            editPanel.setVisible(false);
        } else{
            editTextField.setText(urlList.getSelectedValue());
            editPanel.setVisible(true);
        }
    }//GEN-LAST:event_urlListValueChanged

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String txt = NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.addButton.dialog.inputName")+": ";
        String title = NbBundle.getMessage(PublisherPanel.class, "PublisherPanel.addButton.dialog.title");
        NotifyDescriptor.InputLine input = new NotifyDescriptor.InputLine(txt, title);
        input.setInputText(""); // specify a default name
        Object result = DialogDisplayer.getDefault().notify(input);
        if (result != NotifyDescriptor.OK_OPTION) {
            return;
        }

        String newTarget = input.getInputText();
        listModel.addElement(newTarget);
        controller.changed();
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int selectedIndex = urlList.getSelectedIndex();
        listModel.remove(selectedIndex);
        editPanel.setVisible(false);
    }//GEN-LAST:event_removeButtonActionPerformed

    void load() {
        originalEnabled = isRccPublicherEnabled();
        cbRccPublicher.setSelected(originalEnabled );
        listModel.removeAllElements();        
        getTargets().stream()
                .forEach(target->listModel.addElement(target));
        
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(PublicherPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(PublicherPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    }

    private boolean isRccPublicherEnabled() {
        return Lookup.getDefault().lookup(RccLapPublisher.class).isEnabled();
    }
    
    private List<String> getTargets() {
        return Lookup.getDefault().lookup(JaxRSLapPublisher.class).getTargets();
    }

    void store() {
        Lookup.getDefault().lookup(RccLapPublisher.class).setEnabled( cbRccPublicher.isSelected() );
        
        Lookup.getDefault().lookup(JaxRSLapPublisher.class).setTargets(Collections.list(listModel.elements()));
        
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(PublicherPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(PublicherPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JCheckBox cbRccPublicher;
    private javax.swing.JPanel editPanel;
    private javax.swing.JTextField editTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton testButton;
    private javax.swing.JLabel testResultLabel;
    private javax.swing.JList<String> urlList;
    // End of variables declaration//GEN-END:variables
}
